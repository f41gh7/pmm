// Code generated by protoc-gen-go. DO NOT EDIT.
// source: managementpb/proxysql.proto

package managementpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	inventorypb "github.com/percona/pmm/api/inventorypb"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddProxySQLRequest struct {
	// Node identifier on which a service is been running.
	// Exactly one of these parameters should be present: node_id, node_name, add_node.
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Node name on which a service is been running.
	// Exactly one of these parameters should be present: node_id, node_name, add_node.
	NodeName string `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// Create a new Node with those parameters.
	// Exactly one of these parameters should be present: node_id, node_name, add_node.
	AddNode *AddNodeParams `protobuf:"bytes,3,opt,name=add_node,json=addNode,proto3" json:"add_node,omitempty"`
	// Unique across all Services user-defined name. Required.
	ServiceName string `protobuf:"bytes,4,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Node and Service access address (DNS name or IP).
	// Address (and port) or socket is required.
	Address string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	// Service Access port.
	// Port is required when the address present.
	Port uint32 `protobuf:"varint,6,opt,name=port,proto3" json:"port,omitempty"`
	// Service Access socket.
	// Address (and port) or socket is required.
	Socket string `protobuf:"bytes,17,opt,name=socket,proto3" json:"socket,omitempty"`
	// The "pmm-agent" identifier which should run agents. Required.
	PmmAgentId string `protobuf:"bytes,7,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Environment name.
	Environment string `protobuf:"bytes,8,opt,name=environment,proto3" json:"environment,omitempty"`
	// Cluster name.
	Cluster string `protobuf:"bytes,9,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Replication set name.
	ReplicationSet string `protobuf:"bytes,10,opt,name=replication_set,json=replicationSet,proto3" json:"replication_set,omitempty"`
	// ProxySQL username for scraping metrics.
	Username string `protobuf:"bytes,11,opt,name=username,proto3" json:"username,omitempty"`
	// ProxySQL password for scraping metrics.
	Password string `protobuf:"bytes,12,opt,name=password,proto3" json:"password,omitempty"`
	// Custom user-assigned labels for Service.
	CustomLabels map[string]string `protobuf:"bytes,13,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Skip connection check.
	SkipConnectionCheck bool `protobuf:"varint,14,opt,name=skip_connection_check,json=skipConnectionCheck,proto3" json:"skip_connection_check,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,15,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation.
	TlsSkipVerify bool `protobuf:"varint,16,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// enables push model at exporter
	PushModelEnabled     bool     `protobuf:"varint,18,opt,name=push_model_enabled,json=pushModelEnabled,proto3" json:"push_model_enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddProxySQLRequest) Reset()         { *m = AddProxySQLRequest{} }
func (m *AddProxySQLRequest) String() string { return proto.CompactTextString(m) }
func (*AddProxySQLRequest) ProtoMessage()    {}
func (*AddProxySQLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f72fe9400ce335f, []int{0}
}

func (m *AddProxySQLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddProxySQLRequest.Unmarshal(m, b)
}
func (m *AddProxySQLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddProxySQLRequest.Marshal(b, m, deterministic)
}
func (m *AddProxySQLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddProxySQLRequest.Merge(m, src)
}
func (m *AddProxySQLRequest) XXX_Size() int {
	return xxx_messageInfo_AddProxySQLRequest.Size(m)
}
func (m *AddProxySQLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddProxySQLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddProxySQLRequest proto.InternalMessageInfo

func (m *AddProxySQLRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *AddProxySQLRequest) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *AddProxySQLRequest) GetAddNode() *AddNodeParams {
	if m != nil {
		return m.AddNode
	}
	return nil
}

func (m *AddProxySQLRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *AddProxySQLRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddProxySQLRequest) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *AddProxySQLRequest) GetSocket() string {
	if m != nil {
		return m.Socket
	}
	return ""
}

func (m *AddProxySQLRequest) GetPmmAgentId() string {
	if m != nil {
		return m.PmmAgentId
	}
	return ""
}

func (m *AddProxySQLRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *AddProxySQLRequest) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *AddProxySQLRequest) GetReplicationSet() string {
	if m != nil {
		return m.ReplicationSet
	}
	return ""
}

func (m *AddProxySQLRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AddProxySQLRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AddProxySQLRequest) GetCustomLabels() map[string]string {
	if m != nil {
		return m.CustomLabels
	}
	return nil
}

func (m *AddProxySQLRequest) GetSkipConnectionCheck() bool {
	if m != nil {
		return m.SkipConnectionCheck
	}
	return false
}

func (m *AddProxySQLRequest) GetTls() bool {
	if m != nil {
		return m.Tls
	}
	return false
}

func (m *AddProxySQLRequest) GetTlsSkipVerify() bool {
	if m != nil {
		return m.TlsSkipVerify
	}
	return false
}

func (m *AddProxySQLRequest) GetPushModelEnabled() bool {
	if m != nil {
		return m.PushModelEnabled
	}
	return false
}

type AddProxySQLResponse struct {
	Service              *inventorypb.ProxySQLService  `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	ProxysqlExporter     *inventorypb.ProxySQLExporter `protobuf:"bytes,2,opt,name=proxysql_exporter,json=proxysqlExporter,proto3" json:"proxysql_exporter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *AddProxySQLResponse) Reset()         { *m = AddProxySQLResponse{} }
func (m *AddProxySQLResponse) String() string { return proto.CompactTextString(m) }
func (*AddProxySQLResponse) ProtoMessage()    {}
func (*AddProxySQLResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f72fe9400ce335f, []int{1}
}

func (m *AddProxySQLResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddProxySQLResponse.Unmarshal(m, b)
}
func (m *AddProxySQLResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddProxySQLResponse.Marshal(b, m, deterministic)
}
func (m *AddProxySQLResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddProxySQLResponse.Merge(m, src)
}
func (m *AddProxySQLResponse) XXX_Size() int {
	return xxx_messageInfo_AddProxySQLResponse.Size(m)
}
func (m *AddProxySQLResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddProxySQLResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddProxySQLResponse proto.InternalMessageInfo

func (m *AddProxySQLResponse) GetService() *inventorypb.ProxySQLService {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *AddProxySQLResponse) GetProxysqlExporter() *inventorypb.ProxySQLExporter {
	if m != nil {
		return m.ProxysqlExporter
	}
	return nil
}

func init() {
	proto.RegisterType((*AddProxySQLRequest)(nil), "management.AddProxySQLRequest")
	proto.RegisterMapType((map[string]string)(nil), "management.AddProxySQLRequest.CustomLabelsEntry")
	proto.RegisterType((*AddProxySQLResponse)(nil), "management.AddProxySQLResponse")
}

func init() {
	proto.RegisterFile("managementpb/proxysql.proto", fileDescriptor_0f72fe9400ce335f)
}

var fileDescriptor_0f72fe9400ce335f = []byte{
	// 705 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x94, 0xdd, 0x6e, 0xdb, 0x36,
	0x14, 0xc7, 0x21, 0x27, 0xb1, 0x1d, 0xca, 0x4e, 0x1c, 0x66, 0x1f, 0x9c, 0x3d, 0x2c, 0x86, 0x2f,
	0x32, 0x6f, 0x58, 0xac, 0xcd, 0x1b, 0x86, 0x21, 0x37, 0x83, 0x13, 0x04, 0x58, 0x80, 0x2c, 0x48,
	0x65, 0xb4, 0x28, 0x7a, 0x23, 0xd0, 0xe2, 0xa9, 0x23, 0x58, 0x22, 0x15, 0x92, 0x56, 0xe2, 0xdb,
	0xbc, 0x42, 0xd1, 0x27, 0xeb, 0x03, 0x14, 0x28, 0xfa, 0x08, 0x7d, 0x80, 0x82, 0x94, 0xe4, 0xd8,
	0xe9, 0xc7, 0x1d, 0xcf, 0xf9, 0xfd, 0xcf, 0x17, 0x75, 0x44, 0xd4, 0x49, 0x28, 0xa7, 0x53, 0x48,
	0x80, 0xeb, 0x74, 0xe2, 0xa5, 0x52, 0xdc, 0x2d, 0xd4, 0x4d, 0x3c, 0x48, 0xa5, 0xd0, 0x02, 0xa3,
	0x07, 0xd8, 0xfe, 0x7b, 0x1a, 0xe9, 0xeb, 0xf9, 0x64, 0x10, 0x8a, 0xc4, 0x4b, 0x6e, 0x23, 0x3d,
	0x13, 0xb7, 0xde, 0x54, 0x1c, 0x59, 0xe1, 0x51, 0x46, 0xe3, 0x88, 0x51, 0x2d, 0xa4, 0xf2, 0x96,
	0xc7, 0x3c, 0x47, 0xfb, 0xc7, 0xa9, 0x10, 0xd3, 0x18, 0x3c, 0x9a, 0x46, 0x1e, 0xe5, 0x5c, 0x68,
	0xaa, 0x23, 0xc1, 0x55, 0x41, 0x49, 0xc4, 0x33, 0xe0, 0x5a, 0xc8, 0x45, 0x3a, 0xf1, 0xe8, 0x14,
	0xb8, 0x2e, 0x49, 0x7b, 0x95, 0x28, 0x90, 0x59, 0x14, 0xc2, 0x92, 0xad, 0x35, 0x5d, 0xc0, 0x9c,
	0xf5, 0x3e, 0x6c, 0x21, 0x3c, 0x62, 0xec, 0xca, 0x4c, 0x32, 0x7e, 0x72, 0xe1, 0xc3, 0xcd, 0x1c,
	0x94, 0xc6, 0xdf, 0xa3, 0x1a, 0x17, 0x0c, 0x82, 0x88, 0x11, 0xa7, 0xeb, 0xf4, 0xb7, 0xfd, 0xaa,
	0x31, 0xcf, 0x19, 0xee, 0xa0, 0x6d, 0x0b, 0x38, 0x4d, 0x80, 0x54, 0x2c, 0xaa, 0x1b, 0xc7, 0x25,
	0x4d, 0x00, 0xff, 0x85, 0xea, 0x94, 0xb1, 0xc0, 0xd8, 0x64, 0xa3, 0xeb, 0xf4, 0xdd, 0xe1, 0x0f,
	0x83, 0x87, 0xda, 0x83, 0x11, 0x63, 0x97, 0x82, 0xc1, 0x15, 0x95, 0x34, 0x51, 0x7e, 0x8d, 0xe6,
	0x26, 0xfe, 0x05, 0x35, 0x8a, 0x9e, 0xf2, 0xac, 0x9b, 0x26, 0xeb, 0x49, 0xf5, 0xdd, 0xdb, 0x83,
	0xca, 0x73, 0xc7, 0x77, 0x0b, 0x66, 0x0b, 0x10, 0x64, 0xa2, 0x24, 0x28, 0x45, 0xb6, 0x6c, 0xed,
	0xd2, 0xc4, 0x18, 0x6d, 0xa6, 0x42, 0x6a, 0x52, 0xed, 0x3a, 0xfd, 0xa6, 0x6f, 0xcf, 0xf8, 0x3b,
	0x54, 0x55, 0x22, 0x9c, 0x81, 0x26, 0x7b, 0xf9, 0x0c, 0xb9, 0x85, 0xfb, 0xa8, 0x91, 0x26, 0x49,
	0x60, 0xef, 0xcf, 0x4c, 0x58, 0x5b, 0x2b, 0x88, 0xd2, 0x24, 0x19, 0x19, 0x74, 0xce, 0x70, 0x17,
	0xb9, 0xc0, 0xb3, 0x48, 0x0a, 0x6e, 0x06, 0x20, 0x75, 0x9b, 0x66, 0xd5, 0x65, 0x3a, 0x0a, 0xe3,
	0xb9, 0xd2, 0x20, 0xc9, 0x76, 0xde, 0x51, 0x61, 0xe2, 0x9f, 0xd1, 0xae, 0x84, 0x34, 0x8e, 0x42,
	0xfb, 0x05, 0x03, 0x05, 0x9a, 0x20, 0xab, 0xd8, 0x59, 0x71, 0x8f, 0x41, 0xe3, 0x1e, 0xaa, 0xcf,
	0x15, 0x48, 0x3b, 0xbb, 0xbb, 0xd6, 0xca, 0xd2, 0x8f, 0xdb, 0xa8, 0x9e, 0x52, 0xa5, 0x6e, 0x85,
	0x64, 0xa4, 0x91, 0xdf, 0x7a, 0x69, 0xe3, 0xa7, 0xa8, 0x19, 0xce, 0x95, 0x16, 0x49, 0x10, 0xd3,
	0x09, 0xc4, 0x8a, 0x34, 0xbb, 0x1b, 0x7d, 0x77, 0xf8, 0xfb, 0xa3, 0xab, 0x7f, 0xf4, 0x89, 0x07,
	0xa7, 0x36, 0xe6, 0xc2, 0x86, 0x9c, 0x71, 0x2d, 0x17, 0x7e, 0x23, 0x5c, 0x71, 0xe1, 0x21, 0xfa,
	0x56, 0xcd, 0xa2, 0x34, 0x08, 0x05, 0xe7, 0x10, 0xda, 0x19, 0xc2, 0x6b, 0x08, 0x67, 0x64, 0xa7,
	0xeb, 0xf4, 0xeb, 0xfe, 0xbe, 0x81, 0xa7, 0x4b, 0x76, 0x6a, 0x10, 0x6e, 0xa1, 0x0d, 0x1d, 0x2b,
	0xb2, 0x6b, 0x15, 0xe6, 0x88, 0x0f, 0xd1, 0xae, 0x8e, 0x55, 0x60, 0x33, 0x65, 0x20, 0xa3, 0x97,
	0x0b, 0xd2, 0xb2, 0xb4, 0xa9, 0x63, 0x35, 0x9e, 0x45, 0xe9, 0x33, 0xeb, 0xc4, 0xbf, 0x21, 0x9c,
	0xce, 0xd5, 0x75, 0x90, 0x08, 0x06, 0x71, 0x00, 0x9c, 0x4e, 0x62, 0x60, 0x04, 0x5b, 0x69, 0xcb,
	0x90, 0xff, 0x0d, 0x38, 0xcb, 0xfd, 0xed, 0x7f, 0xd1, 0xde, 0x27, 0xed, 0x9b, 0xe2, 0x33, 0x58,
	0x14, 0xfb, 0x6a, 0x8e, 0xf8, 0x1b, 0xb4, 0x95, 0xd1, 0x78, 0x5e, 0x2e, 0x6a, 0x6e, 0x1c, 0x57,
	0xfe, 0x71, 0x7a, 0xaf, 0x1d, 0xb4, 0xbf, 0x76, 0x27, 0x2a, 0x15, 0x5c, 0x99, 0x0d, 0xae, 0x15,
	0xfb, 0x66, 0xf3, 0xb8, 0xc3, 0xf6, 0x60, 0xf9, 0x63, 0x0d, 0x4a, 0xf5, 0x38, 0x57, 0xf8, 0xa5,
	0x14, 0xff, 0x87, 0xf6, 0xca, 0xa7, 0x20, 0x80, 0x3b, 0xb3, 0x7b, 0x20, 0x6d, 0x4d, 0x77, 0xd8,
	0xf9, 0x4c, 0xfc, 0x59, 0x21, 0xf1, 0x5b, 0x65, 0x54, 0xe9, 0x19, 0xde, 0x3b, 0xa8, 0x5e, 0xca,
	0x70, 0x86, 0xdc, 0x95, 0x1e, 0xf1, 0x4f, 0x5f, 0xff, 0xa0, 0xed, 0x83, 0x2f, 0xf2, 0x7c, 0xb8,
	0xde, 0xe1, 0xfd, 0x9b, 0xf7, 0xaf, 0x2a, 0xdd, 0x5e, 0xc7, 0xcb, 0xfe, 0xf0, 0x1e, 0xb4, 0x5e,
	0x29, 0xf4, 0x46, 0x8c, 0x1d, 0x3b, 0xbf, 0x9e, 0xec, 0xbc, 0x68, 0xac, 0xbe, 0x18, 0x93, 0xaa,
	0x7d, 0x2a, 0xfe, 0xfc, 0x18, 0x00, 0x00, 0xff, 0xff, 0x4d, 0xe0, 0xf8, 0xef, 0xfd, 0x04, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProxySQLClient is the client API for ProxySQL service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProxySQLClient interface {
	// AddProxySQL adds ProxySQL Service and starts several Agents.
	// It automatically adds a service to inventory, which is running on provided "node_id",
	// then adds "proxysql_exporter" with provided "pmm_agent_id" and other parameters.
	AddProxySQL(ctx context.Context, in *AddProxySQLRequest, opts ...grpc.CallOption) (*AddProxySQLResponse, error)
}

type proxySQLClient struct {
	cc grpc.ClientConnInterface
}

func NewProxySQLClient(cc grpc.ClientConnInterface) ProxySQLClient {
	return &proxySQLClient{cc}
}

func (c *proxySQLClient) AddProxySQL(ctx context.Context, in *AddProxySQLRequest, opts ...grpc.CallOption) (*AddProxySQLResponse, error) {
	out := new(AddProxySQLResponse)
	err := c.cc.Invoke(ctx, "/management.ProxySQL/AddProxySQL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProxySQLServer is the server API for ProxySQL service.
type ProxySQLServer interface {
	// AddProxySQL adds ProxySQL Service and starts several Agents.
	// It automatically adds a service to inventory, which is running on provided "node_id",
	// then adds "proxysql_exporter" with provided "pmm_agent_id" and other parameters.
	AddProxySQL(context.Context, *AddProxySQLRequest) (*AddProxySQLResponse, error)
}

// UnimplementedProxySQLServer can be embedded to have forward compatible implementations.
type UnimplementedProxySQLServer struct {
}

func (*UnimplementedProxySQLServer) AddProxySQL(ctx context.Context, req *AddProxySQLRequest) (*AddProxySQLResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddProxySQL not implemented")
}

func RegisterProxySQLServer(s *grpc.Server, srv ProxySQLServer) {
	s.RegisterService(&_ProxySQL_serviceDesc, srv)
}

func _ProxySQL_AddProxySQL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddProxySQLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxySQLServer).AddProxySQL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/management.ProxySQL/AddProxySQL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxySQLServer).AddProxySQL(ctx, req.(*AddProxySQLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProxySQL_serviceDesc = grpc.ServiceDesc{
	ServiceName: "management.ProxySQL",
	HandlerType: (*ProxySQLServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddProxySQL",
			Handler:    _ProxySQL_AddProxySQL_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "managementpb/proxysql.proto",
}
